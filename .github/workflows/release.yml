name: Release (CD)

on:
  push:
    paths:
      - 'pyproject.toml'

defaults:
  run:
    shell: bash

env:
  version: 

jobs:
  Release:
    name: Release
    runs-on: windows-10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Release Notes
        id: notes
        run: |
          sed -i 's/<version>/${{ github.event.inputs.version }}/g' RELEASE.md
          RELEASE=$(cat RELEASE.md)
          RELEASE="${RELEASE//'%'/'%25'}"
          RELEASE="${RELEASE//$'\n'/'%0A'}"
          RELEASE="${RELEASE//$'\r'/'%0D'}"
          echo "::set-output name=notes::$RELEASE"

      - name: Compare Versions
        id: compare
        run: |
          CUR_VERSION=$(poetry version | cut -d ' ' -f 2)
          PRE_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` | cut -c 2-)

          if [ "$CUR_VERSION" \> "$PRE_VERSION" ]; then
            echo "::set-output name=version::$CUR_VERSION"
          else
            exit 1
          fi

      - name: Install Dependencies
        run: make install

      - name: Build
        run: make build

      - name: Zip Artifact
        run: 7z a -tzip scroller-${{ github.steps.compare.outputs.version }}.zip dist/scroller

      - name: Create Release
        uses: actions/create-release@master
        id: release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: v${{ github.steps.compare.outputs.version }}
          release_name: v${{ github.steps.compare.outputs.version }}
          body: |
            ${{ steps.notes.outputs.notes }}
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./scroller-${{ github.event.inputs.version }}.zip
          asset_name: scroller-${{ github.event.inputs.version }}.zip
          asset_content_type: application/octet-stream
